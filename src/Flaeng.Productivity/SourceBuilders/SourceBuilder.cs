namespace Flaeng.Productivity.SourceBuilders;

internal class SourceBuilder
{
    private readonly StringBuilder builder = new();
    private int indentationCount = 0;

    public SourceBuilder()
    {
        builder.AppendLine("""        
        // <auto-generated/>

        #nullable enable

        """);
    }

    bool didWriteIdentationOnCurrentLine;
    public void Write(string text)
    {
        if (didWriteIdentationOnCurrentLine == false)
        {
            builder.Append(indentation());
            didWriteIdentationOnCurrentLine = true;
        }
        builder.Append(text);
    }

    public void WriteLine() => WriteLine(String.Empty);

    public void WriteLine(string text, bool increaseIndentation = false)
    {
        if (didWriteIdentationOnCurrentLine == false)
            builder.Append(indentation());

        builder.AppendLine(text);

        if (increaseIndentation)
            indentationCount++;
        didWriteIdentationOnCurrentLine = false;
    }

    public void DecreaseIndentation() => indentationCount--;

    private string indentation(int? indentationCount = null) => new string(' ', (indentationCount ?? this.indentationCount) * 4);

    public SourceText Build()
    {
        StringBuilder builder = new();
        builder.Append(this.builder);
        var counter = indentationCount;
        while (counter-- > 0)
        {
            builder.Append(indentation(counter));
            builder.AppendLine("}");
        }
        return SourceText.From(builder.ToString(), Encoding.UTF8);
    }
}
